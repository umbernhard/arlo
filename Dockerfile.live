# This is a persistent dev-environment container
#FROM ubuntu:focal 
FROM python:3.8 

# SHELL ["/bin/bash", "-c"]

ENV PYTHONUNBUFFERED=1 \
    # prevents python creating .pyc files
    PYTHONDONTWRITEBYTECODE=1 \
    \
    # pip
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    \
    # poetry
    # https://python-poetry.org/docs/configuration/#using-environment-variables
    POETRY_VERSION=1.1.15 \
    # make poetry install to this location
    # POETRY_HOME="/opt/poetry" \
    # do not ask any interactive question
    POETRY_NO_INTERACTION=1 
    
ENV PATH /app/node_modules/.bin:$PATH
# prepend poetry and venv to path
ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"


RUN apt update && apt install -y build-essential curl neovim sudo git python3-distutils

RUN apt-get install -y locales && \
    sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    dpkg-reconfigure --frontend=noninteractive locales


ENV LC_ALL en_US.UTF-8
ENV ENV LANG en_US.UTF-8
RUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata

RUN useradd -m -G sudo -s /bin/bash arlo
RUN echo "arlo:arlo" | chpasswd


#RUN apt install -y python3.8 python3.8-venv libpython3.8-dev libpq-dev graphicsmagick
RUN # Install node: https://github.com/nodesource/distributions/blob/master/README.md#deb		
RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash 
RUN apt-get install -y nodejs
RUN # Install poetry: https://python-poetry.org/docs/master/#osx--linux--bashonwindows-install-instructions
RUN # Keep the local dev POETRY_VERSION in sync with the Heroku config var
RUN npm install -g yarn
USER arlo
RUN curl -sSL https://install.python-poetry.org | python3.8 -

RUN mkdir /home/arlo/arlo
VOLUME ["/home/arlo/arlo"]
WORKDIR /home/arlo/arlo

ENV PATH /app/node_modules/.bin:$PATH
# prepend poetry and venv to path
ENV PATH /home/arlo/.local/bin:$PATH

#COPY . .
#RUN poetry install
#RUN yarn install
#RUN yarn --cwd client install

EXPOSE 3000
